// Check https://ngrx.io/guide/store/reducers for usage
import { Action, createReducer, on } from '@ngrx/store';
import {
    {{#each actions}}
        {{camelCase this.init}},
        {{camelCase this.ok}},
        {{camelCase this.err}},
    {{/each}}
} from '{{filePaths.actions}}';
import {
    {{pascalCase name}}State,
} from '{{filePaths.interfaces}}';

const {{camelCase name}}InitialState: {{pascalCase name}}State = {
    pending: false,
    data: null,
    error: null,
};

const {{camelCase name}}Reducer = createReducer(
  {{camelCase name}}InitialState,
  {{#each actions}}
      on({{camelCase this.init}}, state => ({...state, pending: true, error: null})),
      on({{camelCase this.ok}}, (state, { payload }) => ({...state, pending: false, data: payload})),
      on({{camelCase this.err}}, (state, {payload}) => ({...state, pending: false, error: payload})),
  {{/each}}
);

export function reducer(state: {{pascalCase name}}State | undefined, action: Action) {
  return {{camelCase name}}Reducer(state, action);
}
